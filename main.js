!function(){"use strict";class e{constructor(e,t,s,i,n){this._id=e._id,this._name=e.name,this._link=e.link,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleRemoveCard=i,this._api=n,this._getViews()}_getViews(){this._cardElement=document.getElementById(this._cardSelector).content.cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-btn"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._trashButton=this._cardElement.querySelector(".card_trash-button"),this._likeButton=this._cardElement.querySelector(".card__like-btn"),this._isLiked&&this._toggleLike()}_toggleLike(){this._likeButton.classList.toggle("card__like-btn-active")}getCardElement(){return this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._cardElement}_setEventListeners(){this._trashButton.addEventListener("click",(e=>{const t=e.target.closest(".card");this._handleRemoveCard(t,this._id)})),this._likeButton.addEventListener("click",(()=>{this._api.like(this._isLiked,this._id).then((e=>{this._isLiked=!this._isLiked,this._toggleLike()})).catch((e=>{console.log(e)}))})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}}const t={formSelector:".model__form",inputSelector:".model__form-input",submitButtonSelector:".model__submit-button",inactiveButtonClass:"model__submit-button-inactive",inputErrorClass:"-input-error",errorClass:"model__input-error-active"},s=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),n=document.querySelectorAll(".model__form"),r=document.querySelector(".profile__avatar");class o{constructor(e){let{selector:t}=e;this._popupElement=document.querySelector(t),this._closeButtons=this._popupElement.querySelector(".model__close-button")}open(){this._popupElement.classList.add("model_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("model_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"==e.key&&this.close()};setEveentListeners(){this._closeButtons.addEventListener("click",(e=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.currentTarget===e.target&&this.close()}))}}class a extends o{constructor(e,t,s){super({selector:e}),this._popupForm=this._popupElement.querySelector(".model__form"),this._inputList=Array.from(this._popupForm.querySelectorAll("input")),this._handleFormSubmit=t,this._validator=s,this._submitButton=this._popupForm.querySelector(".model__submit-button")}close(){super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEveentListeners(){super.setEveentListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._submitButton.textContent="Save...",this._handleFormSubmit(this._getInputValues())}))}submissionCompleate(){this._submitButton.textContent="Save",this._popupForm.reset(),this._validator.toggleButtonState(),this.close()}}class l{constructor(e,t){this._options=e,this._formElement=t,this._getViews()}_getViews(){this._inputList=Array.from(this._formElement.querySelectorAll(this._options.inputSelector)),this._buttonElement=this._formElement.querySelector(this._options.submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.name}${this._options.inputErrorClass}`);s.textContent=t,s.classList.add(this._options.errorClass)}forceHideInputError(){this._inputList.forEach((e=>{this._hideInputError(e)}))}_hideInputError(e){const t=this._formElement.querySelector(`.${e.name}${this._options.inputErrorClass}`);t.classList.remove(this._options.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}toggleButtonState(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._hasInvalidInput()&&!e?(this._buttonElement.classList.add(this._options.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._options.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}}const c={},h=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_getRequest(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";return fetch(this._baseUrl+e,{method:t,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}_requestWithBody(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"POST";return fetch(this._baseUrl+e,{method:s,headers:this._headers,body:JSON.stringify(t)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserData(){return this._getRequest("/users/me")}editProfile(e){return this._requestWithBody("/users/me",e,"PATCH")}editAvatar(e){return this._requestWithBody("/users/me/avatar",e,"PATCH")}getInitialCards(){return this._getRequest("/cards")}addCard(e){return this._requestWithBody("/cards",e)}like(e,t){const s=e?"DELETE":"PUT";return this._getRequest(`/cards/${t}/likes`,s)}removeCard(e){return this._getRequest(`/cards/${e}`,"DELETE")}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a1435ffd-8061-442b-b2ae-d3458326825a","Content-Type":"application/json"}}),u=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._elementsContainer=document.querySelector(t)}setItems(e){this._items=e}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._elementsContainer.prepend(e):this._elementsContainer.appendChild(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{u.addItem(L(e))}},".galery__cards");n.forEach((e=>{c[e.id]=new l(t,e),c[e.id].enableValidation()}));const d=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._nameLabel=document.querySelector(t),this._jobLabel=document.querySelector(s),this._avatarSRC=document.querySelector(i)}getUserInfo(){return{name:this._nameLabel.textContent,job:this._jobLabel.textContent,img:this._avatarSRC.src}}setUserInfo(e,t){this._nameLabel.textContent=e,this._jobLabel.textContent=t}setAvatarLink(e){this._avatarSRC.src=e}}({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__image"}),_=new a("#modal-profile",(e=>{h.editProfile({name:e.name,about:e.job}).then((e=>{d.setUserInfo(e.name,e.about)})).catch((e=>{console.log(e)})).finally((()=>{_.submissionCompleate()}))}),c.profile),m=new a("#modal-cards",(e=>{h.addCard({name:e.title,link:e.link}).then((e=>{u.addItem(L(e),!0)})).catch((e=>{console.log(e)})).finally((()=>{m.submissionCompleate()}))}),c.cards),p=new a("#modal-edit-avatar",(e=>{h.editAvatar({avatar:e.avatar}).then((e=>{d.setAvatarLink(e.avatar)})).catch((e=>{console.log(e)})).finally((()=>{p.submissionCompleate()}))}),c.avatar),g=new class extends o{constructor(e){super({selector:e}),this._image=this._popupElement.querySelector(".model__image"),this._imageLabel=this._popupElement.querySelector(".model__image-label")}open(e){this._image.src=e.link,this._image.alt=e.name,this._imageLabel.textContent=e.name,super.open()}}("#modal-image"),E=new class extends o{constructor(e,t){super({selector:e}),this._button=this._popupElement.querySelector(".model__submit-button"),this._handleFormSubmit=t}open(e,t){super.open(),this._card=e,this._id=t}setEveentListeners(){super.setEveentListeners(),this._button.addEventListener("click",(e=>{e.preventDefault(),this._handleFormSubmit(this._card,this._id),this.close()}))}}("#modal-sure",((e,t)=>{h.removeCard(t).then((t=>{e.remove()})).catch((e=>{console.log(e)})).finally((()=>{E.close()}))}));s.addEventListener("click",(()=>{_.setInputValues(d.getUserInfo()),_.open()})),i.addEventListener("click",(()=>{m.open()})),r.addEventListener("click",(()=>{p.open()}));const v=(e,t)=>{g.open({name:e,link:t})},b=(e,t)=>{E.open(e,t)},L=t=>new e(t,"card-template",v,b,h).getCardElement();_.setEveentListeners(),m.setEveentListeners(),g.setEveentListeners(),p.setEveentListeners(),E.setEveentListeners(),h.getInitialCards().then((e=>{u.setItems(e),u.renderItems()})).catch((e=>{console.log(e)})),h.getUserData().then((e=>{d.setUserInfo(e.name,e.about),d.setAvatarLink(e.avatar)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,